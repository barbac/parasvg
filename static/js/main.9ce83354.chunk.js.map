{"version":3,"sources":["pathDataToPoints.js","Handles.jsx","paths/TankTop.jsx","App.js","serviceWorker.js","index.js"],"names":["controlTypes","start","end","control","pathDataToPoints","pathData","console","log","x","y","points","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","segment","value","pathSegTypeAsLetter","push","x1","y1","x2","y2","_x","_y","err","return","showCurveControls","Handles","_ref","filter","point","react_default","a","createElement","Fragment","map","_ref2","i","_ref3","Object","slicedToArray","type","key","cx","cy","className","concat","r","TankTop","firstRender","useRef","pathRef","React","createRef","_useState","useState","_useState2","setPoints","useLayoutEffect","current","_points","pathSegList","_list","_useState3","_useState4","waist","setWaist","_useState5","_useState6","torso","setTorso","_useState7","_useState8","shoulderToWaist","setShoulderToWaist","_useState9","_useState10","neckWidth","setNeckWidth","_useState11","_useState12","neckHeight","setNeckHeight","width","height","path","viewBox","min","Number","parseInt","max","onChange","e","target","valueAsNumber","style","id","stroke","fill","d","ref","strokeWidth","strokeOpacity","opacity","fillOpacity","App","Path","paths","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ce83354.chunk.js","sourcesContent":["export const controlTypes = {\n  start: \"start\",\n  end: \"end\",\n  control: \"control\"\n};\n\nexport function pathDataToPoints(pathData) {\n  console.log(\"pSelList\", pathData, typeof pathData);\n\n  let x = 0;\n  let y = 0;\n  const points = [];\n\n  for (const segment of pathData) {\n    switch (segment.pathSegTypeAsLetter) {\n      case \"M\":\n        ({ x, y } = segment);\n        points.push([x, y, controlTypes.start, segment.pathSegTypeAsLetter]);\n        break;\n      case \"m\":\n        x += segment.x;\n        y += segment.y;\n        points.push([x, y, controlTypes.start, segment.pathSegTypeAsLetter]);\n        break;\n      case \"L\":\n        ({ x, y } = segment);\n        points.push([x, y, controlTypes.end, segment.pathSegTypeAsLetter]);\n        break;\n      case \"l\":\n        x += segment.x;\n        y += segment.y;\n        points.push([x, y, controlTypes.end, segment.pathSegTypeAsLetter]);\n        break;\n      case \"V\":\n        y = segment.y;\n        points.push([x, y, controlTypes.end, segment.pathSegTypeAsLetter]);\n        break;\n      case \"v\":\n        y += segment.y;\n        points.push([x, y, controlTypes.end, segment.pathSegTypeAsLetter]);\n        break;\n      case \"H\":\n        x = segment.x;\n        points.push([x, y, controlTypes.end, segment.pathSegTypeAsLetter]);\n        break;\n      case \"C\":\n        ({ x, y } = segment);\n        points.push([segment.x1, segment.y1, controlTypes.control]);\n        points.push([segment.x2, segment.y2, controlTypes.control]);\n        points.push([x, y, controlTypes.end, segment.pathSegTypeAsLetter]);\n        break;\n      case \"c\":\n        const _x = x + segment.x;\n        const _y = y + segment.y;\n        points.push([segment.x1 + x, segment.y1 + y, controlTypes.control]);\n        points.push([segment.x2 + x, segment.y2 + y, controlTypes.control]);\n        points.push([_x, _y, controlTypes.end, segment.pathSegTypeAsLetter]);\n        x = _x;\n        y = _y;\n        break;\n\n      default:\n        console.log(\"missing case for segment:\", segment.pathSegTypeAsLetter);\n        continue;\n    }\n  }\n  return points;\n}\n","import React from \"react\";\nimport { controlTypes } from \"./pathDataToPoints.js\";\n\nconst showCurveControls = true;\n\nexport default function Handles({ points }) {\n  if (!showCurveControls) {\n    points = points.filter(point => point[2] !== controlTypes.control);\n  }\n\n  return (\n    <React.Fragment>\n      {points.map(([x, y, type], i) => (\n        <g key={i}>\n          <circle cx={x} cy={y} className={`handle ${type}`} r=\"15\" />\n          <text x={x} y={y}>\n            {i}\n          </text>\n        </g>\n      ))}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useRef, useLayoutEffect } from \"react\";\nimport { pathDataToPoints } from \"../pathDataToPoints.js\";\nimport Handles from \"../Handles.jsx\";\n\nexport function TankTop() {\n  const firstRender = useRef(true);\n  const pathRef = React.createRef();\n  let [points, setPoints] = useState([]);\n\n  useLayoutEffect(() => {\n    //get the points from the DOM only once.\n    if (!firstRender.current) {\n      return;\n    }\n\n    let _points = pathDataToPoints(pathRef.current.pathSegList._list);\n    console.log(\"_points\", _points);\n    firstRender.current = false;\n    setPoints(_points);\n  }, [pathRef]);\n  console.log(\"points\", points);\n\n  const [waist, setWaist] = useState(560);\n  const [torso, setTorso] = useState(400);\n  // const [armsCyeX, setArmsCyeX] = useState(120);\n  // const [armsCyeY, setArmsCyeY] = useState(353.00001);\n  const [shoulderToWaist, setShoulderToWaist] = useState(680);\n  const [neckWidth, setNeckWidth] = useState(200);\n  const [neckHeight, setNeckHeight] = useState(180);\n\n  const width = waist;\n  const height = shoulderToWaist;\n\n  const path =\n    `M ${waist / 2}, ${shoulderToWaist}` + //0\n    `L 0, ${shoulderToWaist}` + //1\n    `V ${shoulderToWaist - torso}` + //2\n    `C 100, 250 110, 190 ${neckWidth / 1.6}, 30` + //3 4 5\n    `L ${waist / 2 - neckWidth / 2}, 0` + //6\n    `C ${waist / 2 - neckWidth / 2}, ${neckHeight} ${waist /\n      2}, ${neckHeight} ${waist / 2}, ${neckHeight}` + //7 8 9\n    `C ${waist / 2}, ${neckHeight} ${waist / 2 +\n      neckWidth / 2}, ${neckHeight} ${waist / 2 + neckWidth / 2}, 0` + //10 11 12\n    `L ${waist - neckWidth / 1.6}, 30` + //13\n    `C ${waist - 110}, 190 ${waist - 100}, 250 ${waist}, ${shoulderToWaist -\n      torso}` + //14 15 16\n    `V ${shoulderToWaist}` + //17\n    `Z`;\n\n  const viewBox = `-25 -25 ${width + 40} ${height + 40} `;\n\n  return (\n    <div>\n      <form>\n        <label>\n          waist {waist}\n          <input\n            min={Number.parseInt(neckWidth * 2.6)}\n            max=\"1700\"\n            type=\"range\"\n            value={waist}\n            onChange={e => setWaist(e.target.valueAsNumber)}\n          />\n        </label>\n        <label>\n          torso {torso}\n          <input\n            min={neckHeight}\n            max={height - neckWidth}\n            type=\"range\"\n            value={torso}\n            onChange={e => setTorso(e.target.valueAsNumber)}\n          />\n        </label>\n        <label>\n          shoulder to waist {shoulderToWaist}\n          <input\n            min={neckHeight}\n            max=\"1500\"\n            value={shoulderToWaist}\n            type=\"range\"\n            onChange={e => setShoulderToWaist(e.target.valueAsNumber)}\n          />\n        </label>\n        <label>\n          neck width {neckWidth}\n          <input\n            min=\"10\"\n            max=\"500\"\n            type=\"range\"\n            value={neckWidth}\n            onChange={e => setNeckWidth(e.target.valueAsNumber)}\n          />\n        </label>\n        <label>\n          neck height {neckHeight}\n          <input\n            min=\"10\"\n            max=\"500\"\n            type=\"range\"\n            value={neckHeight}\n            onChange={e => setNeckHeight(e.target.valueAsNumber)}\n          />\n        </label>\n      </form>\n\n      <div>\n        <svg viewBox={viewBox} style={{ height: \"90vh\" }} id=\"svg\">\n          <rect width={width} height={height} />\n          <g stroke=\"#000\" fill=\"#fff\">\n            <path\n              id=\"path\"\n              d={path}\n              ref={pathRef}\n              stroke=\"#fff\"\n              strokeWidth=\"1\"\n              strokeOpacity=\"1\"\n              opacity=\"1\"\n              fillOpacity=\"0\"\n            />\n            <Handles points={points} />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./svg.css\";\nimport \"pathseg\";\nimport * as paths from \"./paths.js\";\n\nfunction App() {\n  const Path = paths.TankTop;\n\n  return (\n    <div className=\"App\">\n      <Path />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}